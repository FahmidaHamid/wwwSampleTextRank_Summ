 we propose a synchronous algorithm in section 3 and an asynchronous algorithm in section 4. this raises some issues: such that the partial views of the graph  t on it. we describe a partitioning algorithm in section 5. that is, we use variables x (k) on machine k to act as a proxy for zi. each machine minimizes (7). each machine k   {1 .  global factor of node i, if i is owned by a given machine, say m, and not borrowed by any other machine, then the global factor will reside on machine m and be only updated by machine m, which speeds up convergence. k}. graph partitioning [4] addressed the problem of overlapping clustering for distributed computation which shares some of the  avor of our graph partitioning algorithm. future work will see improvements in the graph partitioning algorithm.