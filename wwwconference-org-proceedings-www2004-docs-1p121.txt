 when the browser makes a dns request for a domain name (both to fetch top level pages as well as embedded objects within the pages) the dns responses are intercepted by a dns rewriting proxy. the browser makes a dns request to the dns server to resolve www.foo.com. as shown in the  gure, when the caching proxy makes a dns request to the dns server to resolve the domain name, the dns response does not go through the dns rewriting proxy and is not rewritten. (1) performance enhancing proxy (pep): we built the dns rewriting proxy and the url rewriting proxy on linux. (4) dns server: this is the dns server to which dns requests from both the browser and the squid proxy are made. dns requests for the domain names of the top level pages from the browser are responded to by the dns server with the ip address of the apache web server. no more dns requests are made over the wireless link. dns rewriting: for this set of experiments, the dns rewriting proxy of the pep is activated. dns requests for the top level pages are made from the browser to the dns server (transparently) through the pep. because of this, although multiple objects are downloaded through the same tcp connection, an object has to be fully downloaded before a request for another object is sent on the same connection. there is no impact on the browser cache with dns rewriting.