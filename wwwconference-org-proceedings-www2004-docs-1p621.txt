 a conversation protocol is a (cid:12)nite state automaton which speci(cid:12)es the desired set of conversations of a composite web service. for each message type. we call the message sequences observed by the watcher the conversations of the composite web service. the composite web service in figure 4 satis(cid:12)es this property since all the conversations generated by this composite web service satisfy the property. message types m are extracted from wsdl (cid:12)les. the (cid:12)rst is satis(cid:12)ed by the composite web service, while the second is not. the (cid:12)rst property is veri(cid:12)ed in about 2 minutes with 980 thousand states explored. in example example 3 has an in(cid:12)nite state space as example 1 and unlike example 2.  example 1 example 2 example 3 intuitively, we can show that, when a composite web service satis(cid:12)es the above three conditions, the input queue of each peer is empty whenever the peer sends out a message. this immediately allows veri-(cid:12)cation of web services de(cid:12)ned in these languages without changing the back-end.