 we specify both pattern graphs and data graphs as follows. (2) algorithm hhk correctly computes the maximum match m in data graph g for pattern graph q, and q   g i  for each node v in q, there exists a node u in g with (v, u)   m . for any data graph g, if mi is the maximum match in g for qi, then data locality. (2) theorem 6 tells us how to check whether a node in data graph g can be determined locally or not. given pattern graph q and fragmented data graph g, the algorithm simply collects all fragments of the data graph to the coordinator, and then it calls a standard centralized algorithm of graph simulation, e.g., hhk [16], to compute the maximum match in g for q. proposition 11: given any pattern graph q and fragmented graph f of data graph g, algorithm dishhk computes the maximum match in g for q. this reduces both computations and data shipments. given pattern graph q, we compute a minimized pattern graph qm such that for any data graph g, g matches q i  g matches qm, via graph simulation.  when varying pattern or data graphs.