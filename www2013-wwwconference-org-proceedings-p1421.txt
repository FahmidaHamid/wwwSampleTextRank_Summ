 in the candidate-generation stage, indicator analyzes the service documentation and service sdks to generate constraint candidates. testing: indicator invokes the web services with requests satis-fying/violating a constraint candidate, and observes the results to determine whether the candidate is a real constraint. with these constraint candidates, the candidate-validation stage generates test cases each of which is guaranteed to violate no more than one constraint candidate. such guided test-case generation enables our approach to validate a constraint candidate without being influenced by any other constraint candidate for the same operation. finally, indicator validates each constraint candidate through testing. while we cannot prove a constraint to be real, we could observe whether a constraint candidate causes the same consequences on the execution of test cases as a real constraint does. indicator collects parameter values from four sources. (4) indicator solicits parameter values from users for the remaining parameters if it is feasible to do so. e negatives of in mpared with e test cases.