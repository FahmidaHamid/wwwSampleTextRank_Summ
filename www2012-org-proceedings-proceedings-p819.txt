 alongside code, a web page usually contains resources such as images, videos, or fonts. in phase 2   reinterpretation   the whole web application code is reinterpreted, and code dependencies are tracked with the application execution trace as a guideline. a client-side web application is, in its essence, an html page that includes javascript code, css code and various resources such as images or fonts. the html code de nes the structure of a web page, javascript code the behavior, and css (cascading style sheets) code the presentation. all javascript code is contained in an html node, so each j-node has a structural dependency towards the parent html node. as the application code is being interpreted and code dependencies built, it is important to identify executed code constructs that will be used as a basis for code extraction. since we are dealing with ui applications, these important code constructs are the ones that are modifying the ui. in this work we have shown how web application code implementing a certain behavior can be extracted from the whole web application code by dynamically analyzing application execution traces. depending on the area of application, it