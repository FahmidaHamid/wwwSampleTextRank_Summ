 after submitting the urls, we  rst recorded whether the shortening service allowed us to shorten the url. then, if the service shortened the url, we tracked whether the corresponding short url could be expanded on a daily basis for a four week period. when the browser renders a page, the add-on searches its dom for short urls and submits them to our resolver along with the container page url.  unique short urls. we store a record in our database for each short url submitted. for the other three blacklists, we checked the full url. 4.1 summarizes the breakdown of malicious short urls.  figure 6: malicious short urls: categories of container page ranked by the amount of short urls they held. it is also interesting to look at which sites, among those containing malicious short urls, attracted the most number of users. note that each url can belong to multiple categories.